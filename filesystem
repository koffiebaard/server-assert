#!/bin/bash

function exists {
	file=$1
			if [ -e $file ]; then
				output "exists $file" OK
			else
				output "exists $file" FAIL "File doesn't exist"
			fi
}

function ownership {
	file=$1
	owner=$2
			if [ -e $file ]; then
				if [ -f $file ]; then
					actualOwner=$(ls -la $file | awk '{print $3}')
				else
					actualOwner=$(ls -la $file | grep " \.$" | awk '{print $3}')
				fi

				if [ $owner == $actualOwner ]; then
					output "ownership $file by $owner" OK
				else
					output "ownership $file by $owner" FAIL "owned by $actualOwner, not by $owner"
				fi
			else
				output "ownership $file" FAIL "File doesn't exist"
			fi
}

function permissions {
	file=$1
	permissions=$2

			if [ -e $file ]; then
				if [ -f $file  ] || [ -h $file ]; then
					actualPermissions=$(ls -la $file | awk '{k=0;for(i=0;i<=8;i++)k+=((substr($1,i+2,1)~/[rwx]/) *2^(8-i));if(k)printf("%0o ",k);print}' | awk '{print $1}')
				else
					actualPermissions=$(ls -la $file | awk '{k=0;for(i=0;i<=8;i++)k+=((substr($1,i+2,1)~/[rwx]/) *2^(8-i));if(k)printf("%0o ",k);print}' | grep " \.$" | awk '{print $1}')
				fi

				if [ "$permissions" == "$actualPermissions" ]; then
					output "permissions $file being $permissions" OK
				else
					output "permissions $file being $permissions" FAIL "it's $actualPermissions, not $permissions"
				fi
			else
				output "permissions $file being $permissions" FAIL "File doesn't exist"
			fi
}

function symlink {
	file=$1
	symlinkDestination=$2

			if [ -e $file ]; then
				if [ -h $file ]; then
					actualSymlinkDestination=$(ls -l ~/testsymlink | awk '{print $11}')
					if [ $symlinkDestination == $actualSymlinkDestination ]; then
						output "Symlink $file -> $symlinkDestination" OK
					else
						output "Symlink $file -> $symlinkDestination" FAIL "Symlinks to $actualSymlinkDestination, not $symlinkDestination"
					fi
				else
					output "Symlink $file -> $symlinkDestination" FAIL "It's not a symlink"
				fi
			else
				output "Symlink $file -> $symlinkDestination" FAIL "File doesn't exist"
			fi
}

